apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-replica
  namespace: redis
  labels:
    app: redis-cluster
data:
  redis.conf: |+
    maxmemory-policy allkeys-lru
    appendonly yes
    appendfilename "appendonly.aof"
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    requirepass "mypassword"
    masterauth "mypassword"
    replicaof "192.168.9.194" "30030"
    slave-read-only no
---
apiVersion: v1
kind: Service
metadata:
  name: redis-replica
  namespace: redis
  labels:
    app: redis
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
    nodePort: 30030
    name: client
  - port: 16379
    targetPort: 16379
    nodePort: 31030
    name: gossip
  selector:
    app: redis
    role: replica
    tier: backend
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-replica
  namespace: redis
  labels:
    app: redis
    role: replica
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: docker.io/redis:6.0.5
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false
        args: ["--requirepass", "mypassword"]
        command: ["redis-server", "/conf/redis.conf"]
        env:
        - name: REDIS_PASSWORD
          value: "mypassword"
      volumes:
      - name: conf
        configMap:
          name: redis-cluster-replica
          defaultMode: 0755
